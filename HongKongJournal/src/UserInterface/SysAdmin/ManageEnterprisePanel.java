/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SysAdmin;

import Business.AccountPackage.Account;
import Business.EmployeePackage.Employee;
import Business.ManagementEnterprise;
import Business.RegionalNewsEnterprise;
import Business.NetworkPackage.Network;
import Business.NewsGroupPackage.NewsGroup;
import Business.RolePackage.AdminRole;
import java.awt.CardLayout;
import java.awt.Component;
import static java.awt.Image.SCALE_DEFAULT;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sheldon
 */
public class ManageEnterprisePanel extends javax.swing.JPanel implements ActionListener{
    JPanel userProcessContainer;
    NewsGroup system;
    File file;
    String picturepath;
    
    

    /**
     * Creates new form ManageEnterprisePanel
     * @param userProcessContainer
     * @param system
     */
    public ManageEnterprisePanel(JPanel userProcessContainer,NewsGroup system) {
        initComponents();
        this.setSize(970,620);
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        
        populateComboBox();
        populateTableRegionalNews();
        
        networkJComboBox.addActionListener(this);
        ActionEvent e;
        
    }

    private void populateTableRegionalNews() {
        DefaultTableModel model = (DefaultTableModel) enterpriseJTable.getModel();

        model.setRowCount(0);
        system.getNetworkList().stream().filter((network) -> (network.getRegionalNewsDirectory() != null)).forEach((network) -> {
            network.getRegionalNewsDirectory().getEnterpriseList().stream().map((enterprise) -> {
                Object[] row = new Object[3];
                row[0] = enterprise.getName();
                row[1] = network.getName();
                row[2] = enterprise.getRegionalNewsEnterpriseType().getValue();
                return row;                
            }).forEach((row) -> {
                model.addRow(row);
            });
        });
    }
    
    private void populateTableManagement() {
        DefaultTableModel model = (DefaultTableModel) enterpriseJTable.getModel();

        model.setRowCount(0);
        system.getNetworkList().stream().filter((network) -> (network.getManagementDirectory() != null)).forEach((network) -> {
            network.getManagementDirectory().getEnterpriseList().stream().map((enterprise) -> {
                Object[] row = new Object[3];
                row[0] = enterprise.getName();
                row[1] = network.getName();
                row[2] = enterprise.getManagementEnterpriseType().getValue();
                return row;                
            }).forEach((row) -> {
                model.addRow(row);
            });
        });
    }

    private void populateComboBox() {
        networkJComboBox.removeAllItems();
        enterpriseTypeJComboBox.removeAllItems();

        system.getNetworkList().stream().forEach((network) -> {
            networkJComboBox.addItem(network);
        });
        

    }
        
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        enterpriseJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        networkJComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        enterpriseTypeJComboBox = new javax.swing.JComboBox();
        submitJButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        passwordJPasswordField = new javax.swing.JPasswordField();
        UploadButton = new javax.swing.JButton();
        picture = new javax.swing.JLabel();

        setOpaque(false);

        backJButton.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        enterpriseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Enterprise Name", "Network", "Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(enterpriseJTable);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setText("Network");

        networkJComboBox.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        networkJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel2.setText("Name");

        nameJTextField.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel3.setText("Enterprise Type");

        enterpriseTypeJComboBox.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        enterpriseTypeJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        submitJButton.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        submitJButton.setText("Create");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel4.setText("Password");

        passwordJPasswordField.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N

        UploadButton.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        UploadButton.setText("Upload Picture");
        UploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UploadButtonActionPerformed(evt);
            }
        });

        picture.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        picture.setText("picture");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(backJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(submitJButton)
                .addGap(193, 193, 193))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(picture, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(UploadButton))
                        .addGap(99, 99, 99)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2))
                        .addGap(115, 115, 115)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordJPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(networkJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(enterpriseTypeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(212, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(picture, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(UploadButton)
                        .addGap(0, 57, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(networkJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(enterpriseTypeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(nameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(passwordJPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitJButton)
                    .addComponent(backJButton))
                .addGap(25, 25, 25))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SysAdminPanel sysAdminwjp = (SysAdminPanel) component;
        //sysAdminwjp.populateTree();

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed

        Network network = (Network) networkJComboBox.getSelectedItem();
        String s = enterpriseTypeJComboBox.getSelectedItem().toString();

        switch (s) {
            case "News":
                {
                    String name = nameJTextField.getText(); //name should not be "Chongfu"
                    String password = String.valueOf(passwordJPasswordField.getPassword());
                    RegionalNewsEnterprise.RegionalNewsEnterpriseType type =
                            (RegionalNewsEnterprise.RegionalNewsEnterpriseType) enterpriseTypeJComboBox.getSelectedItem();
                    if (network == null || type == null) {
                        JOptionPane.showMessageDialog(null, "Invalid Input!");
                        return;
                    }       for(Network n : system.getNetworkList()){
                        for(RegionalNewsEnterprise e : n.getRegionalNewsDirectory().getEnterpriseList()){
                            if(e.getName().equals(name)){
                                JOptionPane.showMessageDialog(null, "This enterpeise is already exsist!");
                                return;
                            }
                        }
                        for(ManagementEnterprise e : n.getManagementDirectory().getEnterpriseList()){
                            if(e.getName().equals(name)){
                                JOptionPane.showMessageDialog(null, "This enterpeise is already exsist!");
                                return;
                            }
                }
                    }       RegionalNewsEnterprise enterprise = network.getRegionalNewsDirectory().createAndAddEnterprise(name, type);
                    Employee employee = enterprise.getEmployeeDirectory().createEmployee(name);
                    Account account = enterprise.getUserAccountDirectory().createUserAccount(name, password, employee, new AdminRole(), picturepath);
                    JOptionPane.showMessageDialog(null, "A new regional news enterprise has been created");
                    populateTableRegionalNews();
                    break;
                }
            case "Strategy":
            {
                String name = nameJTextField.getText();
                String password = String.valueOf(passwordJPasswordField.getPassword());
                ManagementEnterprise.ManagementEnterpriseType type = 
                        (ManagementEnterprise.ManagementEnterpriseType) enterpriseTypeJComboBox.getSelectedItem();
                if (network == null || type == null) {
                    JOptionPane.showMessageDialog(null, "Invalid Input!");
                    return;
                }       //not empty if a press exist
                if(!network.getManagementDirectory().getEnterpriseList().isEmpty()){
                    try {
                        for(ManagementEnterprise e : network.getManagementDirectory().getEnterpriseList()){
                            if(e.getManagementEnterpriseType().getValue().equals("Strategy")){
                                JOptionPane.showMessageDialog(null, "Only one strategy enterprise can be created!");
                                return;
                            }
                        }
                    }catch (Exception e){
                        
                    }
                }       for(Network n : system.getNetworkList()){
                    for(ManagementEnterprise e : n.getManagementDirectory().getEnterpriseList()){
                        if(e.getName().equals(name)){
                            JOptionPane.showMessageDialog(null, "This enterpeise is already exsist!");
                            return;
                        }
                    }
                    for(RegionalNewsEnterprise e : n.getRegionalNewsDirectory().getEnterpriseList()){
                        if(e.getName().equals(name)){
                            JOptionPane.showMessageDialog(null, "This enterpeise is already exsist!");
                            return;
                        }
                    }
                }       ManagementEnterprise enterprise = network.getManagementDirectory().createAndAddEnterprise(name, type);
                Employee employee = enterprise.getEmployeeDirectory().createEmployee(name);
                Account account = enterprise.getUserAccountDirectory().createUserAccount(name, password, employee, new AdminRole(), picturepath);
                JOptionPane.showMessageDialog(null, "A new strategy enterprise has been created");
                populateTableManagement();
                break;
            }
            case "Press":
            {
                String name = nameJTextField.getText();
                String password = String.valueOf(passwordJPasswordField.getPassword());
                ManagementEnterprise.ManagementEnterpriseType type =
                        (ManagementEnterprise.ManagementEnterpriseType) enterpriseTypeJComboBox.getSelectedItem();
                if (network == null || type == null) {
                    JOptionPane.showMessageDialog(null, "Invalid Input!");
                    return;
                }       if(!network.getManagementDirectory().getEnterpriseList().isEmpty()){
                    try {
                        for(ManagementEnterprise e : network.getManagementDirectory().getEnterpriseList()){
                            if(e.getManagementEnterpriseType().getValue().equals("Press")){
                                JOptionPane.showMessageDialog(null, "Only one press enterprise can be created!");
                                return;
                            }
                        }
                    }catch (Exception e){
                        
                    }
                }       for(Network n : system.getNetworkList()){
                    for(ManagementEnterprise e : n.getManagementDirectory().getEnterpriseList()){
                        if(e.getName().equals(name)){
                            JOptionPane.showMessageDialog(null, "This enterpeise is already exsist!");
                            return;
                        }
                    }
                    for(RegionalNewsEnterprise e : n.getRegionalNewsDirectory().getEnterpriseList()){
                        if(e.getName().equals(name)){
                            JOptionPane.showMessageDialog(null, "This enterpeise is already exsist!");
                            return;
                        }
                    }
                }       ManagementEnterprise enterprise = network.getManagementDirectory().createAndAddEnterprise(name, type);
                Employee employee = enterprise.getEmployeeDirectory().createEmployee(name);
                    Account account = enterprise.getUserAccountDirectory().createUserAccount(name, password, employee, new AdminRole(),picturepath);
                    JOptionPane.showMessageDialog(null, "A new press enterprise has been created");
                    populateTableManagement();
                    break;
                }
        }
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void UploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UploadButtonActionPerformed
        JFileChooser upload = new JFileChooser();
        upload.setFileSelectionMode(JFileChooser.FILES_ONLY);
        
        int i = upload.showOpenDialog(null);
        if (i == JFileChooser.APPROVE_OPTION){
        file = upload.getSelectedFile();
        picturepath = file.getAbsolutePath();
        }
            else{
            
            }
        
        ImageIcon p = new ImageIcon(picturepath);
        p.setImage(p.getImage().getScaledInstance(150, 145, SCALE_DEFAULT));
        picture.setIcon(p);
    }//GEN-LAST:event_UploadButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton UploadButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JTable enterpriseJTable;
    private javax.swing.JComboBox enterpriseTypeJComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JComboBox networkJComboBox;
    private javax.swing.JPasswordField passwordJPasswordField;
    private javax.swing.JLabel picture;
    private javax.swing.JButton submitJButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        Network n = (Network) networkJComboBox.getSelectedItem();
        if ("RegionalNews".equals(n.getType())){
           enterpriseTypeJComboBox.removeAllItems();
           for (RegionalNewsEnterprise.RegionalNewsEnterpriseType type : RegionalNewsEnterprise.RegionalNewsEnterpriseType.values()) {
               enterpriseTypeJComboBox.addItem(type);
           }
           populateTableRegionalNews();
        }
        else if ("Management".equals(n.getType())){
           enterpriseTypeJComboBox.removeAllItems();
           for (ManagementEnterprise.ManagementEnterpriseType type : ManagementEnterprise.ManagementEnterpriseType.values()){
               enterpriseTypeJComboBox.addItem(type);
           }
           populateTableManagement();
        }
    }
   
    
    
}
