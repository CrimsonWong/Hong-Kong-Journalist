/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.RegionalNewsAdmin;

import Business.AccountPackage.Account;
import Business.EmployeePackage.Employee;
import Business.ManagementEnterprise;
import Business.NetworkPackage.Network;
import Business.NewsGroupPackage.NewsGroup;
import Business.OrgPackage.OrganizationDirectory;
import Business.Organization;
import Business.RegionalNewsEnterprise;
import Business.Role;
import java.awt.CardLayout;
import static java.awt.Image.SCALE_DEFAULT;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sheldon
 */
public class ManageEmployeePanel extends javax.swing.JPanel {
    private OrganizationDirectory organizationDir;
    private JPanel userProcessContainer;
    private NewsGroup system;
    private File file;
    private String picturepath;

    /**
     * Creates new form ManageEmployeePanel
     * @param userProcessContainer
     * @param organizationDir
     * @param system
     */
    public ManageEmployeePanel(JPanel userProcessContainer,OrganizationDirectory organizationDir, NewsGroup system) {
        initComponents();
        this.setSize(970,620);
        this.system = system;
        this.userProcessContainer = userProcessContainer;
        this.organizationDir = organizationDir;
        
        populateOrganizationComboBox();
        populateOrganizationEmpComboBox();
    }
    
     public void populateOrganizationComboBox(){
        DepartmentComboBox.removeAllItems();
        
        organizationDir.getOrganizationList().stream().forEach((organization) -> {
            DepartmentComboBox.addItem(organization);
        });
    }
    
    public void populateOrganizationEmpComboBox(){
        UserTypeComboBox.removeAllItems();
        
        organizationDir.getOrganizationList().stream().forEach((organization) -> {
            UserTypeComboBox.addItem(organization);
        });
    }

    private void populateTable(Organization organization){
        DefaultTableModel model = (DefaultTableModel) organizationJTable.getModel();
        
        model.setRowCount(0);
        
        organization.getEmployeeDirectory().getEmployeeList().stream().map((employee) -> {
            Object[] row = new Object[1];
            row[0] = employee;
            return row;
        }).forEach((row) -> {
            model.addRow(row);
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        organizationJTable = new javax.swing.JTable();
        addJButton = new javax.swing.JButton();
        DepartmentComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        UserTypeComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        passwordJTextField = new javax.swing.JTextField();
        picture = new javax.swing.JLabel();
        UploadButton = new javax.swing.JButton();

        setOpaque(false);

        organizationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(organizationJTable);

        addJButton.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        addJButton.setText("Create Employee");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });

        DepartmentComboBox.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        DepartmentComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DepartmentComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setText("Department:");

        backJButton.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel2.setText("Name:");

        nameJTextField.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N

        UserTypeComboBox.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel3.setText("Department:");

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel4.setText("Password");

        passwordJTextField.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N

        picture.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        picture.setText("picture");

        UploadButton.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        UploadButton.setText("UploadFile");
        UploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UploadButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DepartmentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(82, 82, 82)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(backJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 473, Short.MAX_VALUE)
                .addComponent(addJButton)
                .addGap(125, 125, 125))
            .addGroup(layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(UploadButton)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(picture, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(146, 146, 146)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(25, 25, 25)))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nameJTextField)
                            .addComponent(passwordJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(UserTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(DepartmentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(picture, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(nameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(UserTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(76, 76, 76)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UploadButton)
                    .addComponent(jLabel4)
                    .addComponent(passwordJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(addJButton))
                .addGap(18, 18, 18))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed

        Organization organization = (Organization) UserTypeComboBox.getSelectedItem();
        String name = nameJTextField.getText();
        String password = passwordJTextField.getText();
        
        //sysadmin
        for(Account a : system.getUserAccountDirectory().getAccountList()){
            if(a.getUsername().equals(name)){
                JOptionPane.showMessageDialog(null, "This name is already exsist");
                return;
            }
        }
        //employee
        for(Network network:system.getNetworkList()){
            //Step 2.a: check against each enterprise
            for(ManagementEnterprise enterprise:network.getManagementDirectory().getEnterpriseList()){
                //Step 3:check against each organization for each enterprise
                for(Organization org:enterprise.getOrganizationDirectory().getOrganizationList()){
                    for(Account a : org.getUserAccountDirectory().getAccountList()){
                        if(a.getUsername().equals(name)){
                            JOptionPane.showMessageDialog(null, "This name is already exsist");
                            return;
                        }
                    }
                }
            }
        }
        //employee
        for(Network network:system.getNetworkList()){
            //Step 2.a: check against each enterprise
            for(RegionalNewsEnterprise enterprise:network.getRegionalNewsDirectory().getEnterpriseList()){
                //Step 3:check against each organization for each enterprise
                for(Organization org:enterprise.getOrganizationDirectory().getOrganizationList()){
                    for(Account a : org.getUserAccountDirectory().getAccountList()){
                        if(a.getUsername().equals(name)){
                            JOptionPane.showMessageDialog(null, "This name is already exsist");
                            return;
                        }
                    }
                }
            }
        }
        
        //admin regional news
        for(Network network:system.getNetworkList()){
            //Step 2.a: check against each enterprise
            for(RegionalNewsEnterprise enterprise:network.getRegionalNewsDirectory().getEnterpriseList()){
                //Step 3:check against each organization for each enterprise
                for(Account a : enterprise.getUserAccountDirectory().getAccountList()){
                    if(a.getUsername().equals(name)){
                        JOptionPane.showMessageDialog(null, "This name is already exsist");
                        return;
                    }
                }
            }
        }
        
        //admin manage
        for(Network network:system.getNetworkList()){
            //Step 2.a: check against each enterprise
            for(ManagementEnterprise enterprise:network.getManagementDirectory().getEnterpriseList()){
                //Step 3:check against each organization for each enterprise
                for(Account a : enterprise.getUserAccountDirectory().getAccountList()){
                    if(a.getUsername().equals(name)){
                        JOptionPane.showMessageDialog(null, "This name is already exsist");
                        return;
                    }
                }
            }
        }

        Employee employee = organization.getEmployeeDirectory().createEmployee(name);
        Role role = null;
        for (Role r : organization.getSupportedRole()){
            role = r;
        }

        organization.getUserAccountDirectory().createUserAccount(name, password, employee, role, picturepath);
        JOptionPane.showMessageDialog(null, "An employee has been created");
        populateTable(organization);

    }//GEN-LAST:event_addJButtonActionPerformed

    private void DepartmentComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DepartmentComboBoxActionPerformed
        Organization organization = (Organization) DepartmentComboBox.getSelectedItem();
        if (organization != null){
            populateTable(organization);
        }
    }//GEN-LAST:event_DepartmentComboBoxActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void UploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UploadButtonActionPerformed
        JFileChooser upload = new JFileChooser();
        upload.setFileSelectionMode(JFileChooser.FILES_ONLY);

        int i = upload.showOpenDialog(null);
        if (i == JFileChooser.APPROVE_OPTION){
            file = upload.getSelectedFile();
            picturepath = file.getAbsolutePath();
            //PathText.setText(picturepath);
        }
        else{

        }

        ImageIcon p = new ImageIcon(picturepath);
        p.setImage(p.getImage().getScaledInstance(150, 145, SCALE_DEFAULT));
        picture.setIcon(p);
    }//GEN-LAST:event_UploadButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox DepartmentComboBox;
    private javax.swing.JButton UploadButton;
    private javax.swing.JComboBox UserTypeComboBox;
    private javax.swing.JButton addJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JTable organizationJTable;
    private javax.swing.JTextField passwordJTextField;
    private javax.swing.JLabel picture;
    // End of variables declaration//GEN-END:variables
}
